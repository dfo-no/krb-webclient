/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export type paths = {
  "/api/v1/projects": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": (components["schemas"]["ProjectForm"])[];
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ProjectForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}": {
    get: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectForm"];
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ProjectForm"];
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["ProjectForm"];
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/codelists": {
    get: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CodelistForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/codelists/{codelistRef}": {
    get: {
      parameters: {
        path: {
          codelistRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          codelistRef: string;
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CodelistForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          codelistRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/codelists/{codelistRef}/codes": {
    get: {
      parameters: {
        path: {
          codelistRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          codelistRef: string;
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CodeForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/codelists/{codelistRef}/codes/{codeRef}": {
    get: {
      parameters: {
        path: {
          codeRef: string;
          codelistRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          codeRef: string;
          codelistRef: string;
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["CodeForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          codeRef: string;
          codelistRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/needs": {
    get: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["NeedForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/needs/{needRef}": {
    get: {
      parameters: {
        path: {
          needRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          needRef: string;
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["NeedForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          needRef: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/products": {
    get: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ProductForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/products/{productref}": {
    get: {
      parameters: {
        path: {
          productref: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          productref: string;
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["ProductForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          productref: string;
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/requirements": {
    get: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RequirementForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/requirements/{requirementRef}": {
    get: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RequirementForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/requirements/{requirementRef}/requirementvariants": {
    get: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RequirementVariantForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectRef}/requirements/{requirementRef}/requirementvariants/{requirementVariantRef}": {
    get: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
          requirementVariantRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
          requirementVariantRef: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["RequirementVariantForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          projectRef: string;
          requirementRef: string;
          requirementVariantRef: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectref}/publications": {
    get: {
      parameters: {
        path: {
          projectref: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    post: {
      parameters: {
        path: {
          projectref: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PublicationForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/projects/{projectref}/publications/{publicationref}": {
    get: {
      parameters: {
        path: {
          projectref: string;
          publicationref: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    put: {
      parameters: {
        path: {
          projectref: string;
          publicationref: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PublicationForm"];
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
    delete: {
      parameters: {
        path: {
          projectref: string;
          publicationref: string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/api/v1/unwrap/uploadPdf": {
    post: {
      requestBody?: {
        content: {
          "application/json": string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
      };
    };
  };
  "/api/v1/wrap/prefilled": {
    post: {
      requestBody?: {
        content: {
          "application/json": string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
      };
    };
  };
  "/api/v1/wrap/report": {
    post: {
      requestBody?: {
        content: {
          "application/json": string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
      };
    };
  };
  "/api/v1/wrap/specification": {
    post: {
      requestBody?: {
        content: {
          "application/json": string;
        };
      };
      responses: {
        /** @description OK */
        200: never;
      };
    };
  };
  "/test/api/v1/admin": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "text/plain": {
              [key: string]: string | undefined;
            };
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/test/api/v1/users/info": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              [key: string]: string | undefined;
            };
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
  "/test/api/v1/users/user": {
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              [key: string]: components["schemas"]["Principal"] | undefined;
            };
          };
        };
        /** @description Not Authorized */
        401: never;
        /** @description Not Allowed */
        403: never;
      };
    };
  };
};

export type webhooks = Record<string, never>;

export type components = {
  schemas: {
    CodeForm: {
      ref?: string;
      title?: string;
      description?: string;
    };
    CodelistForm: {
      ref?: string;
      title?: string;
      description?: string;
    };
    /**
     * Format: date-time 
     * @example "2022-03-10T12:15:50.000Z"
     */
    LocalDateTime: string;
    NeedForm: {
      ref?: string;
      title?: string;
      description?: string;
    };
    Principal: {
      name?: string;
    };
    ProductForm: {
      ref?: string;
      title?: string;
      description?: string;
      requirementVariantRef?: string;
    };
    ProjectForm: {
      ref?: string;
      title?: string;
      description?: string;
    };
    PublicationForm: {
      ref?: string;
      comment?: string;
      date?: components["schemas"]["LocalDateTime"];
      /** Format: int64 */
      version?: number;
    };
    RequirementForm: {
      ref?: string;
      title?: string;
      description?: string;
      needRef?: string;
    };
    RequirementVariantForm: {
      ref?: string;
      description?: string;
      requirementText?: string;
      instruction?: string;
      useProduct?: boolean;
      useSpecification?: boolean;
      useQualification?: boolean;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
};

export type external = Record<string, never>;

export type operations = Record<string, never>;
